<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='project.sales.cities' inline='true' name='federated.0ifry5i1vgd1q41dthazh1yto3qq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='project.sales.cities' name='textscan.1w89oel1vvxjr213ucq1e07v9cld'>
            <connection class='textscan' directory='C:/Users/sarah/Documents/Econometrics/final_project' filename='project.sales.cities.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1w89oel1vvxjr213ucq1e07v9cld' name='project.sales.cities.csv' table='[project.sales.cities#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='city' ordinal='0' />
            <column datatype='string' name='category' ordinal='1' />
            <column datatype='integer' name='sale.dollars' ordinal='2' />
            <column datatype='integer' name='sale.volume' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1w89oel1vvxjr213ucq1e07v9cld' name='project.sales.cities.csv' table='[project.sales.cities#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='city' ordinal='0' />
            <column datatype='string' name='category' ordinal='1' />
            <column datatype='integer' name='sale.dollars' ordinal='2' />
            <column datatype='integer' name='sale.volume' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[project.sales.cities.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[project.sales.cities.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[project.sales.cities.csv_E0C18A8D9909453BA75B9DBE0E2598D0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[project.sales.cities.csv]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[project.sales.cities.csv_E0C18A8D9909453BA75B9DBE0E2598D0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sale.dollars</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sale.dollars]</local-name>
            <parent-name>[project.sales.cities.csv]</parent-name>
            <remote-alias>sale.dollars</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[project.sales.cities.csv_E0C18A8D9909453BA75B9DBE0E2598D0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sale.volume</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sale.volume]</local-name>
            <parent-name>[project.sales.cities.csv]</parent-name>
            <remote-alias>sale.volume</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[project.sales.cities.csv_E0C18A8D9909453BA75B9DBE0E2598D0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='project.sales.cities.csv' datatype='table' name='[__tableau_internal_object_id__].[project.sales.cities.csv_E0C18A8D9909453BA75B9DBE0E2598D0]' role='measure' type='quantitative' />
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Holy Cross&quot;' value='42.6006' />
          <semantic-value key='&quot;Melcher&quot;' value='41.225000000000001' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Holy Cross&quot;' value='90.995699999999999' />
          <semantic-value key='&quot;Melcher&quot;' value='93.241299999999995' />
        </semantic-values>
      </column>
      <column caption='Sale.Dollars' datatype='integer' name='[sale.dollars]' role='measure' type='quantitative' />
      <column caption='Sale.Volume' datatype='integer' name='[sale.volume]' role='measure' type='quantitative' />
      <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
      <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Amaretto&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Schnapps&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Brandy&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Vodka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Misc&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Whisky&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gin&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Tequila&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Distilled Spirits&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Rum&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:city:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alden&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Avoca&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Camanche&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dayton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eddyville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Floyd&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grand Mound&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hospers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Keota&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mechanicsville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oskaloosa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Princeton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Schaller&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Springville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Treynor&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Webster City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zwingle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ackley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Anthon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bondurant&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chariton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Council Bluffs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Everly&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gilmore City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Harlan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Laurens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marcus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monticello&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pleasantville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rolfe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sioux Center&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Swea City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Walnut&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Whittemore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Atkins&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Clarinda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cumming&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dysart&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Goldfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hazleton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Johnston&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Le Mars&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Martensdale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Onawa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Postville&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Ansgar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sloan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tiffin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Winterset&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alta Vista&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carter Lake&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eldridge&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Atkinson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grimes&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Humeston&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madrid&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Merrill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Sharon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pacific Junction&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Remsen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seymour&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Storm Lake&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Van Horne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Bend&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Algona&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Baldwin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clive&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;De Soto&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Edgewood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fonda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Granger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hubbard&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kingsley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lohrville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mediapolis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Neola&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ossian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Raymond&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Schleswig&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stanton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tripoli&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wellman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Albert City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Atlantic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Buffalo Center&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clarion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dakota City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eagle Grove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Farley&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gowrie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hiawatha&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kellogg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lenox&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mason City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Orange City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prairie City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Solon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tipton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Waukee&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Winthrop&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Anita&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bloomfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Centerville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Corwith&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Donnellson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Estherville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;George&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hamburg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Larchwood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mapleton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Northwood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peosta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rockwell&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sibley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sumner&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Walker&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;West Union&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Adair&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Boone&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charles City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Crescent&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dunlap&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Exira&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gladbrook&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Harpers Ferry&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jefferson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lawler&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marengo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montrose&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oelwein&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pocahontas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Runnells&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sioux City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Swisher&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wapello&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Williamsburg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ames&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bettendorf&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Coralville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ely&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Garnavillo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guthrie Center&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indianola&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lamoni&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manning&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mitchellville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North English&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paullina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rock Rapids&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shellsburg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stuart&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vinton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;West Liberty&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Albia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Audubon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Earlham&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Graettinger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Holstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Keokuk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Leon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maxwell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Osage&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Preston&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Lucas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spencer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waukon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woodbine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belle Plaine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cascade&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbus Junction&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Elkader&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Dodge&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grinnell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Huxley&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lake Mills&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malvern&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Virginia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Riceville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sheffield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Story City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Van Meter&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Branch&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Casey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Conrad&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Delmar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ellsworth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Madison&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Griswold&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ida Grove&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lake Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Minden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Newton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panora&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shelby&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stratford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Victor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Burlington&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Anamosa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bevington&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Center Point&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Corning&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Emmetsburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Garner&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guttenberg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Inwood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Monona&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Liberty&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pella&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rock Valley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shenandoah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sully&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Walford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;West Point&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ankeny&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Blue Grass&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Corydon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dows&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Evansdale&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gilbertville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iowa Falls&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latimer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maquoketa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montezuma&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Norwalk&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Perry&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rockwell City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sigourney&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sutherland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wall Lake&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wheatland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Allison&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bancroft&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carlisle&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colesburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;De Witt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eldon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fontanelle&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greene&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hudson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lost Nation&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Otho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Red Oak&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Scranton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stanwood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Urbana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wellsburg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alburnett&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aurelia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bussey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clear Lake&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Davenport&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Early&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fayette&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grand Junction&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Holy Cross&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Keosauqua&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lisbon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mc Gregor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Muscatine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Osceola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Primghar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sanborn&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spirit Lake&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Traer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waverly&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Woodward&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Armstrong&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Britt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cherokee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cresco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Durant&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fairbank&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Glenwood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hartley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jesup&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Le Claire&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Moravia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ogden&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Polk City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ruthven&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sioux Rapids&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tabor&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alvord&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belmond&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cedar Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denison&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Elma&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fredericksburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grundy Center&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake View&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manly&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Missouri Valley&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nora Springs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Parkersburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Robins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sheldon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Strawberry Point&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Villisca&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West Des Moines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Baxter&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carroll&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colfax&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Decorah&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eldora&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Forest City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greenfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Humboldt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Porte City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lovilia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Melcher&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Hampton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ottumwa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Reinbeck&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sergeant Bluff&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;State Center&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wesley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Afton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arnolds Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brooklyn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Creston&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dyersville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fairfax&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Glidden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hawarden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jewell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Le Grand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marshalltown&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mount Ayr&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Okoboji&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pomeroy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sac City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slater&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Templeton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Washta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Windsor Heights&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='&quot;Iowa&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='project.sales.cities.csv' id='project.sales.cities.csv_E0C18A8D9909453BA75B9DBE0E2598D0'>
            <properties context=''>
              <relation connection='textscan.1w89oel1vvxjr213ucq1e07v9cld' name='project.sales.cities.csv' table='[project.sales.cities#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='city' ordinal='0' />
                  <column datatype='string' name='category' ordinal='1' />
                  <column datatype='integer' name='sale.dollars' ordinal='2' />
                  <column datatype='integer' name='sale.volume' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Category Sales by City</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='project.sales.cities' name='federated.0ifry5i1vgd1q41dthazh1yto3qq' />
          </datasources>
          <datasource-dependencies datasource='federated.0ifry5i1vgd1q41dthazh1yto3qq'>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column caption='Sale.Dollars' datatype='integer' name='[sale.dollars]' role='measure' type='quantitative' />
            <column-instance column='[sale.dollars]' derivation='Sum' name='[sum:sale.dollars:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[none:category:nk]' direction='ASC' using='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[sum:sale.dollars:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[sum:sale.dollars:qk]' scope='cols' value='Sales, Dollars' />
            <encoding attr='space' class='0' field='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[sum:sale.dollars:qk]' field-type='quantitative' major-origin='0' major-spacing='10000000.0' minor-origin='0' minor-spacing='5000000' scope='cols' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[none:category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ifry5i1vgd1q41dthazh1yto3qq].[none:category:nk]</rows>
        <cols>[federated.0ifry5i1vgd1q41dthazh1yto3qq].[sum:sale.dollars:qk]</cols>
      </table>
      <simple-id uuid='{84C22EA8-A1B3-4345-8831-CBE898BA1B8A}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Total Sales by City, Dollars</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='project.sales.cities' name='federated.0ifry5i1vgd1q41dthazh1yto3qq' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ifry5i1vgd1q41dthazh1yto3qq'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Holy Cross&quot;' value='42.6006' />
                <semantic-value key='&quot;Melcher&quot;' value='41.225000000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Holy Cross&quot;' value='90.995699999999999' />
                <semantic-value key='&quot;Melcher&quot;' value='93.241299999999995' />
              </semantic-values>
            </column>
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column caption='Sale.Dollars' datatype='integer' name='[sale.dollars]' role='measure' type='quantitative' />
            <column-instance column='[sale.dollars]' derivation='Sum' name='[sum:sale.dollars:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[none:city:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:city:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:city:nk]' member='&quot;Holy Cross&quot;' />
                <groupfilter function='member' level='[none:city:nk]' member='&quot;Melcher&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ifry5i1vgd1q41dthazh1yto3qq].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[sum:sale.dollars:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[sum:sale.dollars:qk]' value='Sales, Dollars'>
              <formatted-text>
                <run>Sales, Dollars</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[sum:sale.dollars:qk]' />
              <size column='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[sum:sale.dollars:qk]' />
              <lod column='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[none:city:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.3922650814056396' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ifry5i1vgd1q41dthazh1yto3qq].[Latitude (generated)]</rows>
        <cols>[federated.0ifry5i1vgd1q41dthazh1yto3qq].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{59C161BC-40C4-4D1C-82AD-D2752D151B17}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Top Selling Cities, Dollars</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='project.sales.cities' name='federated.0ifry5i1vgd1q41dthazh1yto3qq' />
          </datasources>
          <datasource-dependencies datasource='federated.0ifry5i1vgd1q41dthazh1yto3qq'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Holy Cross&quot;' value='42.6006' />
                <semantic-value key='&quot;Melcher&quot;' value='41.225000000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Holy Cross&quot;' value='90.995699999999999' />
                <semantic-value key='&quot;Melcher&quot;' value='93.241299999999995' />
              </semantic-values>
            </column>
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column caption='Sale.Dollars' datatype='integer' name='[sale.dollars]' role='measure' type='quantitative' />
            <column-instance column='[sale.dollars]' derivation='Sum' name='[sum:sale.dollars:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[none:city:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([sale.dollars])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[none:city:nk]' direction='DESC' using='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[sum:sale.dollars:qk]' />
          <slices>
            <column>[federated.0ifry5i1vgd1q41dthazh1yto3qq].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[sum:sale.dollars:qk]' scope='cols' value='Sales, Dollars' />
            <encoding attr='space' class='0' field='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[sum:sale.dollars:qk]' field-type='quantitative' major-origin='0' major-spacing='10000000.0' minor-origin='0' minor-spacing='5000000' scope='cols' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[none:city:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ifry5i1vgd1q41dthazh1yto3qq].[none:city:nk]</rows>
        <cols>[federated.0ifry5i1vgd1q41dthazh1yto3qq].[sum:sale.dollars:qk]</cols>
      </table>
      <simple-id uuid='{D2937498-6736-41D6-88D9-72C6EEA63583}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Least Selling Cities, Dollars</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='project.sales.cities' name='federated.0ifry5i1vgd1q41dthazh1yto3qq' />
          </datasources>
          <datasource-dependencies datasource='federated.0ifry5i1vgd1q41dthazh1yto3qq'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Holy Cross&quot;' value='42.6006' />
                <semantic-value key='&quot;Melcher&quot;' value='41.225000000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Holy Cross&quot;' value='90.995699999999999' />
                <semantic-value key='&quot;Melcher&quot;' value='93.241299999999995' />
              </semantic-values>
            </column>
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column caption='Sale.Dollars' datatype='integer' name='[sale.dollars]' role='measure' type='quantitative' />
            <column-instance column='[sale.dollars]' derivation='Sum' name='[sum:sale.dollars:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[none:city:nk]'>
            <groupfilter count='5' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([sale.dollars])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[none:city:nk]' direction='ASC' using='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[sum:sale.dollars:qk]' />
          <slices>
            <column>[federated.0ifry5i1vgd1q41dthazh1yto3qq].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[sum:sale.dollars:qk]' scope='cols' value='Sales, Dollars' />
            <encoding attr='space' class='0' field='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[sum:sale.dollars:qk]' field-type='quantitative' major-origin='0' major-spacing='100.0' minor-origin='0' minor-spacing='50' scope='cols' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[none:city:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ifry5i1vgd1q41dthazh1yto3qq].[none:city:nk]</rows>
        <cols>[federated.0ifry5i1vgd1q41dthazh1yto3qq].[sum:sale.dollars:qk]</cols>
      </table>
      <simple-id uuid='{2EF322A8-9FE3-40F5-9E89-DD4C21487963}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='83483' id='7' param='horz' type-v2='layout-flow' w='48848' x='1151' y='7029'>
            <zone h='83483' id='3' param='horz' type-v2='layout-flow' w='48848' x='1151' y='7029'>
              <zone h='83483' id='5' name='Sheet 2' w='48848' x='1151' y='7029'>
                <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='8572' id='9' param='horz' type-v2='layout-flow' w='48848' x='1151' y='90512'>
            <zone h='8572' id='8' name='Sheet 2' pane-specification-id='0' param='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[sum:sale.dollars:qk]' type-v2='color' w='48848' x='1151' y='90512'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='42971' id='10' name='Sheet 3' w='48850' x='49999' y='7029'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49084' id='12' name='Sheet 4' w='48850' x='49999' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='6113' id='13' param='vert' type-v2='layout-flow' w='97698' x='1151' y='916'>
            <zone h='5612' id='14' type-v2='text' w='97698' x='1151' y='916'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='18'>City Sales Dynamics</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
                <format attr='background-color' value='#f5f1f0' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98168' id='19' param='vert' type-v2='layout-flow' w='97698' x='1151' y='916'>
                <zone h='5612' id='14' type-v2='text' w='97698' x='1151' y='916'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontsize='18'>City Sales Dynamics</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5f1f0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='83483' id='5' is-fixed='true' name='Sheet 2' w='48848' x='1151' y='7029'>
                  <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8572' id='8' name='Sheet 2' pane-specification-id='0' param='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[sum:sale.dollars:qk]' type-v2='color' w='48848' x='1151' y='90512'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42971' id='10' is-fixed='true' name='Sheet 3' w='48850' x='49999' y='7029'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49084' id='12' is-fixed='true' name='Sheet 4' w='48850' x='49999' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D14E6DC3-9E8B-4501-BE68-54FF72942689}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='fit-height' />
        </viewpoint>
      </viewpoints>
      <active id='14' />
      <simple-id uuid='{6A7B87ED-C427-4D9A-9BD1-BA660ED11AAC}' />
    </window>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[none:category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ifry5i1vgd1q41dthazh1yto3qq].[none:category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2CDAC96-0EE6-46F3-9674-DA92FF70F342}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[sum:sale.dollars:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[sum:sale.dollars:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ifry5i1vgd1q41dthazh1yto3qq].[none:category:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{F67FCCD9-13D2-4D93-AFE1-9F508EC52473}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[none:city:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ifry5i1vgd1q41dthazh1yto3qq].[none:city:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6B7B9EAB-3BFB-4BD6-A76F-C5BD370B477E}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ifry5i1vgd1q41dthazh1yto3qq].[none:city:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ifry5i1vgd1q41dthazh1yto3qq].[none:city:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1011F70A-D13E-459E-85FB-E74A0035E7D5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      wnIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='167' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='167' name='Sheet 4' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
